name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
      - feature/*
      - bugfix/*   
  pull_request:
    branches:
      - main
      - master
      - feature/*
      - bugfix/*   

env:
  MONGODB_URI: mongodb://mongodb:27017/test
  NODE_ENV: test
  PORT: 3000
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'  
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build and start services
      run: |
        docker-compose up -d --build
        docker-compose exec app npm test  # Run tests in Docker container

    - name: Stop and remove services
      run: docker-compose down

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          your-dockerhub-username/${{ env.IMAGE_NAME }}:latest
          your-dockerhub-username/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy to production
      run: |
        echo "Deployment step - add your deployment commands here"